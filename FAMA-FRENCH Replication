//--------
* This code is for replicating FAMA FRENCH Factors: HML and SMB
/*
* This section of code is for checking access to databases in WRDS
clear
odbc load, exec("select distinct frname from wrds_lib_internal.friendly_schema_mapping;") dsn("$wrdskey")

clear
odbc load, exec("select distinct table_name from information_schema.columns where table_schema='library' order by table_name;") dsn("$wrdskey")

clear
odbc load, exec("select column_name from information_schema.columns where table_schema='library' and table_name='dataset' order by column_name;") dsn("$wrdskey")
*/
//--------

//--------
* Set Up
//--------
clear 
set more off

global wrdskey "wrds-pgdata" // Set up your WRDS Key
global data "your_working_directory" // Set up your working directory

cd "$data"

//--------
* Extracting Data From WRDS
//--------
**# COMPUSTAT (SAS Checked)
clear 
odbc load, exec("select gvkey, datadate, at, pstkl, txditc, pstkrv, seq, pstk, indfmt, datafmt, popsrc, consol from comp.funda where indfmt = 'INDL' and datafmt = 'STD' and popsrc = 'D' and consol = 'C' and datadate >= '1959jan01';") dsn("$wrdskey")

sort gvkey datadate

gen ps = pstkrv
replace ps = pstkl if missing(ps)
replace ps = pstk if missing(ps)
replace ps = 0 if missing(ps)

gen be = seq + txditc - ps
replace be = . if be < 0

gen year = year(datadate)
label var be "Book value of Equity FYear t-1"
drop indfmt datafmt popsrc consol ps at pstkl txditc pstkrv seq pstk
bys gvkey: gen count = _n

tempfile comp
save `comp', replace

//--------
**# CRSP Merge
//--------

**# Parameters Set Up (SAS Checked)
global msevars "ticker ncusip shrcd exchcd"
global msfvars "prc ret retx shrout cfacpr cfacshr" 
global sdate = "01jan1959"
global edate = "30jun2022"


**# sfdata (stock data) (SAS Checked)
global sfvars = subinstr("$msfvars", " ", ", ", .)
clear
odbc load, exec("select permco, permno, date, $sfvars from crspm.msf where date >= '$sdate' and date <='$edate' and permno in (select distinct permno from (select permno, namedt, nameendt from crspm.msenames where NAMEDT <= '$edate' and '$sdate' <=NAMEENDT) as a) order by permno, date;") dsn("$wrdskey")
tempfile sfdata
save `sfdata', replace

**# sedata (event data) (SAS Checked)
global sevars = subinstr("$msevars", " ", ", ", .)
clear
odbc load, exec("select a.* from (select permco, permno, date, $sevars from crspm.mseall) as a, (select distinct permno, min(namedt) as minnamedt from(select permno, namedt, nameendt from crspm.msenames where NAMEDT <= '$edate' and NAMEENDT >= '$sdate') as tmp group by permno) as b where a.date >= b.minnamedt and a.date <= '$edate' and a.permno = b.permno order by a.permno, a.date") dsn("$wrdskey")
tempfile sedata
save `sedata', replace

**# Merge stock and event data
clear
global eventvars ticker comnam ncusip shrout siccd exchcd shrcls shrcd shrflg trtscd nmsind mmcnt nsdinx
global eventdata permco permno date ticker ncusip shrcd exchcd exchcd
global stockdata permco permno date prc ret retx shrout cfacpr cfacshr
global sevar_eventvar ticker ncusip shrcd exchcd
use `sfdata', clear
joinby permno date using `sedata', unm(both)

sort permno date 
tempvar idx
bys permno: gen `idx' = _n
foreach var of global sevar_eventvar{
	forvalue i = 1/150{
		sort permno date
		tempvar `var'_lag
		gen ``var'_lag' = `var'
		bys permno: replace ``var'_lag' = `var' if _m != 1 | `idx' == 1
		bys permno: replace `var' = ``var'_lag'[_n-1] if _m == 1 & !(_m != 1 | `idx' == 1)
		drop ``var'_lag'
	}
}


drop if _m == 2 // if eventdata and not stockdata then delete; (From SAS)
drop _m

duplicates drop permno date, force
keep if inlist(exchcd, 1, 2, 3) 

tempfile crspmerge
save `crspmerge'

//--------
**# CRSP
//--------

**# Construct CRSPM2 (SAS Checked)
clear
odbc load, exec("select permno, dlstdt, dlret from crspm.msedelist") dsn("$wrdskey")
drop if missing(dlret)
gen endofm = dofm(mofd(dlstdt)+1)-1
format endofm %td
tempfile msedelist
save `msedelist'

use `crspmerge', clear
gen endofm = dofm(mofd(date)+1)-1
merge 1:1 permno endofm using `msedelist'
drop if _m == 2
drop _m
replace ret = 0 if missing(ret)
replace dlre = 0 if missing(dlre)
gen retadj = (1+ret)*(1+dlre)-1
label var retadj "Retrun adjusted for delisting"
replace prc = 0 if missing(prc)
replace shrout = 0 if missing(shrout)
gen MEq = abs(prc)*shrout
label var MEq "Market Value of Equity"
tempfile crspm2
save `crspm2'

**# Drop out multiple records for the same permco in the same date (CRSPM2A) (SAS Checked)
use `crspm2', clear
sort date permco MEq
bys date permco: egen ME = total(MEq)
tempvar tmp tmp2
bys date permco: gen `tmp' = _n
bys date permco: gen `tmp2' = _N
keep if `tmp' == `tmp2'
drop MEq
tempfile crspm2a
save `crspm2a', replace

**# Construct CRSPM3 and DECME
use `crspm2a', clear
sort permno date

gen me_base = .
gen weight_port = .
gen cumretx = 0

tempvar tmp 
bys permno: gen `tmp' = _n
bys permno: gen LME = ME[_n-1]
replace retx = 0 if `tmp' == 1

* first.permno
bys permno: replace LME = ME/(1+retx) if `tmp' == 1
bys permno: replace me_base = . if `tmp' == 1
bys permno: replace cumretx = 1+retx if `tmp' == 1
bys permno: replace weight_port = . if `tmp' == 1

* month(date)=7
replace weight_port = LME if month(date) == 7
replace me_base = LME if month(date) == 7
replace cumretx = 1+retx if month(date) == 7

* LME <= 0
bys permno: replace weight_port = . if month(date) != 7 & `tmp' != 1 & LME <= 0
bys permno: replace cumretx = cumretx[_n-1]*(1+retx) if month(date) != 7 & `tmp' != 1 & LME > 0

* LME > 0
forvalues i = 1/10{
	bys permno: replace me_base = me_base[_n-1] if missing(me_base)
}
bys permno: replace weight_port = cumretx[_n-1]*me_base[_n-1] if (month(date) != 7 & `tmp' != 1) & LME > 0 & LME != .

**# CRSPM3
tempfile crspm3
save `crspm3', replace

**# DECME
keep if month(date) == 12 & ME > 0
keep permno date ME 
rename ME DEC_ME
tempfile decme 
save `decme', replace


**# CRSPJUNE (Missing 36 obs)
use `decme', clear
gen newdate = mofd(date)
format newdate %tm
replace newdate = newdate + 6
keep permno newdate DEC_ME
tempfile decme6
save `decme6', replace

use `crspm3', clear
keep if month(date) == 6
gen newdate = mofd(date)
format newdate %tm
joinby permno newdate using `decme6'
drop newdate

tempfile crspjune
save `crspjune', replace

//--------
**# Merge CRSP and Compustat
//--------
clear 
odbc load, exec("select * from crsp.ccmxpf_linktable") dsn("$wrdskey")
keep gvkey lpermno linktype linkprim linkdt linkenddt

tempfile linktable
save `linktable', replace

**# CCM1
use `comp', clear
joinby gvkey using `linktable'
keep if (substr(linktype,1,1)=="L") & (inlist(linkprim, "P", "C")) & (mdy(6, 30, yofd(datadate)+1) >= linkdt) & (linkenddt >= mdy(6, 30, yofd(datadate)+1) | missing(linkenddt))
rename lpermno permno

tempfile ccm1
save `ccm1', replace

**# CCM1A
use `ccm1', clear
gsort datadate permno -linkprim
tempvar id
bys datadate permno: gen `id' = _n
keep if `id'==1

tempfile ccm1a
save `ccm1a', replace

**# CCM2A
use `ccm1a', clear
sort permno year datadate
tempvar id idL
bys permno year: gen `id' = _n
bys permno year: gen `idL' = _N
keep if `id' == `idL'

tempfile ccm2a
save `ccm2a', replace

**# CCM2_JUNE
use `ccm2a', clear
keep permno be count datadate
gen newdate = ym(year(datadate)+1, 6)
tempfile ccm2a_merge
save `ccm2a_merge'

use `crspjune', clear
gen newdate = ym(year(date), month(date))
joinby permno newdate using `ccm2a_merge'
gen BEME = 1000*be/DEC_ME
gen dist = datediff(datadate, date, "month")+1
drop newdate

tempfile ccm2_june
save `ccm2_june', replace

**# NYSE_BREAKS
use `ccm2_june', clear
keep if exchcd == 1 & BEME > 0 & inlist(shrcd, 10, 11) & ME > 0 & count >= 2

collapse (median) SIZEMEDN = ME (p30) ME30 = ME BEME30 = BEME (p70) ME70 = ME BEME70 = BEME, by(date)

tempfile nyse_breaks
save `nyse_breaks', replace

**# CCM3_June
use `ccm2_june', clear
merge m:1 date using `nyse_breaks'
keep if _m == 3
drop _m

tempfile ccm3_june
save `ccm3_june',replace 

**# JUNE
use `ccm3_june', clear
gen positivebeme = 1 if BEME > 0 & ME > 0 & count >= 2
gen sizeport = "S" if inrange(ME, 0, SIZEMEDN) & (BEME > 0 & ME > 0 & count >= 2)
replace sizeport = "B" if ME > SIZEMEDN & (BEME > 0 & ME > 0 & count >= 2)
gen btmport = "L" if BEME >0 & BEME <= BEME30 & (BEME > 0 & ME > 0 & count >= 2)
replace btmport = "M" if BEME > BEME30 & BEME<= BEME70 & (BEME > 0 & ME > 0 & count >= 2)
replace btmport = "H" if BEME > BEME70 & (BEME > 0 & ME > 0 & count >= 2)

replace positivebeme = 0 if !(BEME > 0 & ME > 0 & count >= 2)
egen nonmissport = rowmiss(sizeport btmport)
replace nonmissport = 1 if nonmissport > 0
replace nonmissport = 1-nonmissport

keep permno date sizeport btmport positivebeme exchcd shrcd nonmissport
rename date bdate
tempfile june
save `june', replace

**# CCM4
use `crspm3', clear
joinby permno using `june'
keep if inrange(datediff(bdate, date, "month"), 1, 12)
sort date sizeport btmport 
drop bdate
tempfile ccm4
save `ccm4', replace

********************************************************************************
keep if weight_port>0 
keep if positivebeme==1 
keep if inrange(exchcd,1,3) 
keep if inrange(shrcd, 10,11) 
keep if nonmissport==1

bysort date sizeport btmport: egen tot_cap = sum(weight_port)
gen weight = weight_port / tot_cap

gen retadj_x_weight = retadj * weight

collapse (sum) vwret = retadj_x_weight (count) n_firm = retadj_x_weight, by(date btmport sizeport)


// gen port_name = ""
// replace port_name = "SL" if sizeport == "S" & btmport == "L"
// replace port_name = "SM" if sizeport == "S" & btmport == "M"
// replace port_name = "SH" if sizeport == "S" & btmport == "H" 
// replace port_name = "BL" if sizeport == "B" & btmport == "L"
// replace port_name = "BM" if sizeport == "B" & btmport == "M"
// replace port_name = "BH" if sizeport == "B" & btmport == "H"

keep date sizeport btmport vwret
gen port_name = .
replace port_name = 1 if sizeport == "S" & btmport == "L"
replace port_name = 2 if sizeport == "S" & btmport == "M"
replace port_name = 3 if sizeport == "S" & btmport == "H" 
replace port_name = 4 if sizeport == "B" & btmport == "L"
replace port_name = 5 if sizeport == "B" & btmport == "M"
replace port_name = 6 if sizeport == "B" & btmport == "H"

label define p_names 1 "SL" 2 "SM" 3 "SH" 4 "BL" 5 "BM" 9 "BH"
label values port_name p_names

drop sizeport btmport

reshape wide vwret, i(date) j(port_name)

rename vwret1 SL
rename vwret2 SM
rename vwret3 SH
rename vwret4 BL
rename vwret5 BM
rename vwret6 BH

gen H = (BH+SH)/2
gen L = (BL+SL)/2
gen wHML = H-L

gen B = (BL + BM + BH)/3
gen S = (SL + SM + SH)/3
gen wSMB = S-B
keep date wHML wSMB
rename wHML hml_r
rename wSMB smb_r

gen year = year(date)
gen month = month(date)

tempfile factors_replication
save `factors_replication', replace


/* Load FF factors */ 
drop _all
odbc load, exec("select * from ff.factors_monthly") dsn("$wrdskey")
drop date dateff
order year month mktrf smb hml rf
sort year month
tempfile ff_factors
save `ff_factors', replace
drop _all

/* Compare FF factors with WRDS replication */ 
use `ff_factors', clear
merge 1:1 year month using `factors_replication'
keep if _merge == 3
drop _merge
gen d_hml = hml-hml_r
gen d_smb = smb - smb_r

















